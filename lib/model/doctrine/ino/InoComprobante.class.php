<?php

/**
 * InoComprobante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6508 2009-10-14 06:28:49Z jwage $
 */
class InoComprobante extends BaseInoComprobante
{

    const ABIERTO = 0;
    const PARA_TRANSFERIR = 1;
    const TRANSFERIDO = 5;
    const ERROR_TRANSFERIDO = 6;
    const ANULADO = 8;

    const IDTIPO_F_INO = 1;
    const IDTIPO_P_INO = 2;
    
    const IDTIPO_F_INO_COLOTM_E = 14;
    
    const IDTIPO_V_INO = 11;
    const IDTIPO_R_INO = 12;
    
    
    const ID_FACTURACION = 663;
    const ID_DEUDORES = 664;
    const ID_PORPAGAR = 665;
    const ID_UTILIDAD_X_SOBREVENTA = 666;
    public $iva = null;
    
    public function getIva(){
        if (!$this->iva){
        $fgenero = ($this->getCaFchgenero()!="")?$this->getCaFchgenero():date("Y-m-d");
        
            $parametroContable = Doctrine::getTable("ParamContables")
                    ->createQuery("p")
                    ->addWhere("p.ca_fch_fin >= '$fgenero' and p.ca_fch_ini <= '$fgenero'")
                    ->addWhere("p.ca_idempresa = {$this->getInoTipoComprobante()->getCaIdempresa()}")
                    ->fetchOne();
            $this->iva = $parametroContable->getCaPorctarifa();
        }
        return $this->iva;
    }

    public function __toString(){
        $tipo = $this->getInoTipoComprobante();
        return $tipo->getCaTipo().$tipo->getCaComprobante()."-".$this->getCaConsecutivo();
    }

    public function getValor(){
        $tipo = $this->getInoTipoComprobante();

        $q = Doctrine::getTable("InoTransaccion")
                  ->createQuery("t");
        $q->select("SUM(t.ca_valor) as valor,t.ca_db");
        $q->addWhere("t.ca_idcomprobante = ?", $this->getCaIdcomprobante());
        $q->addWhere("t.ca_idcuenta = ?", $tipo->getCaIdctaCierre());
        $q->addGroupBy("t.ca_db");
        $vals = $q->setHydrationMode(Doctrine::HYDRATE_SCALAR)->execute();
        
        $total = 0;
        
        foreach( $vals as $val ){
            if( $val["t_ca_db"] ){
                $total+=$val["t_valor"];
            }else{
                $total-=$val["t_valor"];
            }
        }        
        return $total;
    }
    
    public function anular($iduser,$msg="")
    {
        $this->setCaFchanulado(date("Y-m-d H:i:s"));
        $this->setCaUsuanulado($iduser);
        $this->setCaEstado(self::ANULADO);
        $this->setProperty("msgAnulado",$msg);
        $this->save();
    }

    public function getMovimientos(){
        
        return Doctrine::getTable("InoDetalle")
                ->createQuery("det")
                ->select("det.*,s.*,tcomp.ca_ctarteica,cric.ca_rteica")
                ->innerJoin("det.InoComprobante comp")
                ->innerJoin("comp.InoTipoComprobante tcomp")                
                ->leftJoin('det.InoConSiigo s WITH tcomp.ca_idempresa=s.ca_idempresa ')
                ->leftJoin("tcomp.Ctarteica cric WITH tcomp.ca_idempresa=s.ca_idempresa ")
                ->addWhere("det.ca_idconcepto IS NOT NULL")
                ->addWhere("det.ca_idcomprobante = ? ",$this->getCaIdcomprobante()  )
                ->addOrderBy("s.ca_pt DESC")
                ->setHydrationMode(Doctrine::HYDRATE_SCALAR)
                ->execute();
    }
    
    public function getContactoCliente(){
    
        if($this->getProperty("idcontacto"))
        {
            $contacto = Doctrine::getTable("Contacto")->find($this->getProperty("idcontacto"));
            return $contacto->getCaNombres()." ".$contacto->getCaPapellido()." ".$contacto->getCaSapellido();
        }
        else
            return " ";
    }
    
}