<?php

/**
 * InoMaster
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class InoMaster extends BaseInoMaster
{
    private $vlrFacturado = null;
    private $vlrNotasCredito = null;
    private $vlrDeducciones = null;
    private $vlrCosto = null;
    private $vlrSobreventa = null;
    
    private $emails;
    private  $countemails;
    
    public function getVlrFacturado(){
        if( $this->vlrFacturado===null ){
            $this->vlrFacturado = Doctrine::getTable("InoComprobante")
                       ->createQuery("c")
                       ->innerJoin("c.InoHouse h")
                       ->innerJoin("c.InoTipoComprobante t")
                       ->innerJoin("h.InoMaster m")
                       ->select("SUM(c.ca_valor*c.ca_tcambio)")
                       ->addWhere("m.ca_idmaster = ? ", $this->getCaIdmaster())
                       ->addWhere("t.ca_tipo =?", "F")
		       ->addWhere("c.ca_fchanulado is null")
                       //->addWhere("c.ca_estado =?", InoComprobante::TRANSFERIDO)
                       ->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)        
                       ->execute();
        }
        
        if( $this->vlrNotasCredito===null ){
            $this->vlrNotasCredito = Doctrine::getTable("InoComprobante")
                       ->createQuery("c")
                       ->innerJoin("c.InoHouse h")
                       ->innerJoin("c.InoTipoComprobante t")
                       ->innerJoin("h.InoMaster m")
                       ->select("SUM(c.ca_valor*c.ca_tcambio)")
                       ->addWhere("m.ca_idmaster = ? ", $this->getCaIdmaster())
                       ->addWhere("t.ca_tipo =?", "C")
		       ->addWhere("c.ca_fchanulado is null")
                       //->addWhere("c.ca_estado =?", InoComprobante::TRANSFERIDO)
                       ->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)        
                       ->execute();
        }
        return $this->vlrFacturado-$this->vlrNotasCredito;
    }

    public function getVlrDeducciones(){
        if( $this->vlrDeducciones===null ){
             $q= Doctrine::getTable("InoDeduccion")
                       ->createQuery("d")
                       ->innerJoin("d.InoComprobante c")
                       ->innerJoin("c.InoHouse h")
                       ->innerJoin("h.InoMaster m")
                       ->select("SUM(d.ca_neto*d.ca_tcambio)")
                       ->addWhere("m.ca_idmaster = ?", $this->getCaIdmaster())
                       ->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR);
            $this->vlrDeducciones=$q->execute();
            
        }
        return $this->vlrDeducciones;
    }
    
    
    public function getVlrCosto(){
        if( $this->vlrCosto===null ){
            $this->vlrCosto = Doctrine::getTable("InoCosto")
                       ->createQuery("c")                       
                       ->innerJoin("c.InoMaster m")
                       ->select("SUM(c.ca_neto*c.ca_tcambio/ca_tcambio_usd)")
                       ->addWhere("m.ca_idmaster = ?", $this->getCaIdmaster())
                       ->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)        
                       ->execute();
        }
        return $this->vlrCosto;
    }
    
    public function getVlrSobreventa(){
        if( $this->vlrSobreventa===null ){
            $this->vlrSobreventa = Doctrine::getTable("InoUtilidad")
                       ->createQuery("u")                       
                       ->innerJoin("u.InoCosto c") 
                       ->innerJoin("c.InoMaster m")
                       ->select("SUM(u.ca_valor)")
                       ->addWhere("m.ca_idmaster = ?", $this->getCaIdmaster())
                       ->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)        
                       ->execute();
        }
        return $this->vlrSobreventa;
    }
    
    public function getReadOnly(){
        return $this->getCaFchliquidado()||$this->getCaFchcerrado()||$this->getCaFchanulado();
    }
    
    
    public function getCaTipo(){
        
    }
    
    public function getCaEmisionbl(){
        
    }
    
    public function getLiquidado(){
        return ($this->getCaFchliquidado())?TRUE:FALSE;
    }
    
    public function getCerrado(){
        return ($this->getCaFchcerrado())?TRUE:FALSE;
    }
    
    public function getAnulado(){
        return ($this->getCaFchanulado())?TRUE:FALSE;
    }
    
    
    public function getEmails() {
     
        $q = Doctrine::getTable("Email")
                        ->createQuery("e")
                        ->addWhere("ca_tipo=? and ca_idcaso = ?", array('Antecedentes', $this->getCaIdmaster() ) )
                        ->addOrderBy("e.ca_idemail DESC");
          
        $this->emails= $q->execute();        
        $this->countemails=count($this->emails);        
        return $this->emails;
    }
    
    public function getCountEmails() {
        if(!$this->countemails)
        {
            $this->countemails = Doctrine::getTable("Email")
                        ->createQuery("e")
                        ->select("count(*) as nreg")
                        ->addWhere("ca_tipo=? and ca_idcaso= ?", array('Antecedentes', $$this->getCaIdmaster() ))
                        ->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)
                        ->execute();
        }
        return $this->countemails;
    }

    public function getUltEmail() {
        if(!$this->emails)
            $this->getEmails();
        if($this->countemails>0)
            $email=$this->emails[0];
        else
            $email=null;
        return $email;
    }
    
    static public function getUltEmailR($referencia) {
 
        $email = Doctrine::getTable("Email")
                        ->createQuery("e")
                        ->select("ca_subject")
                        ->addWhere("ca_tipo=? and ca_idcaso =?", array('Antecedentes', $referencia ))
                        ->addOrderBy("e.ca_idemail DESC")                        
                        //->setHydrationMode(Doctrine::HYDRATE_SCALAR)
                        ->fetchOne();
                //print_r($email);
        return $email;
    }
    
    public function getDatosMasterSea() {
        $masterSea = $this->getInoMasterSea();
        $datosMaster = json_decode(utf8_encode($masterSea->getCaDatos()),1);
        return $datosMaster;
    }
    
}
