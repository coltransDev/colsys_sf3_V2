<?php

/**
 * HdeskTicket
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
class HdeskTicket extends BaseHdeskTicket
{
    const FOLDER = "tickets";
    
    public function getLastResponse(){
		
        return Doctrine::getTable("HdeskResponse")->createQuery("r")
                                           ->where("r.ca_idticket = ?", $this->getCaIdticket() )
                                           ->addOrderBy("r.ca_createdat DESC")
                                           ->fetchOne();
	}

    /*
	*
	*/
	public function getAssignedUser(){
		if( $this->getCaAssignedto() ){
			return Doctrine::getTable("Usuario")->find( $this->getCaAssignedto() );
		}
		return  null;
	}


    public function getTareaIdg(){

		$tarea=null;
		if( $this->getCaIdtarea() ){
			$tarea = Doctrine::getTable("NotTarea")->find( $this->getCaIdtarea() );
		}
		return $tarea;
	}

    public function getTareaSeguimiento(){

		$tarea=null;
		if( $this->getCaIdseguimiento() ){
            $tarea = Doctrine::getTable("NotTarea")->find( $this->getCaIdseguimiento() );
		}
		return $tarea;
	}

	/*
	*  Retorna un array con los logins del grupo
	*/
	public function getLoginsGroup(){
		$loginsAsignaciones = array( );
		if( $this->getCaAssignedto() ){
			$loginsAsignaciones[]=$this->getCaAssignedto();
		}else{
			
            $usuarios = Doctrine::getTable("HdeskUserGroup")
                     ->createQuery("ug")
                     ->where("ug.ca_idgroup = ?", $this->getCaIdgroup() )
                     ->addOrderBy("ug.ca_login")
                     ->execute();
			foreach( $usuarios as $usuario ){
				$loginsAsignaciones[]=$usuario->getCaLogin();
			}
		}
		return array_unique( $loginsAsignaciones );
	}

    /*
     * Retorna los usuarios involucrados en el ticket
     */
	public function getUsuarios(){
        return Doctrine::getTable("Usuario")->createQuery("u")
                    ->innerJoin("u.HdeskTicketUser ug")
                    ->where("ug.ca_idticket = ?", $this->getCaIdticket())
                    ->addOrderBy("u.ca_nombre")
                    ->execute();
        
    }


    /*
	* Devuelve la ubicacion del directorio donde se encuentran los archivos
	* @author Andres Botero
	*/
    public function getDirectorio(){
        $folder = HdeskProject::FOLDER;
        return $directory = sfConfig::get('app_digitalFile_root').DIRECTORY_SEPARATOR.$this->getDirectorioBase();

    }

    public function getDirectorioBase(){
        $folder = HdeskProject::FOLDER;
        return $directory = $folder.DIRECTORY_SEPARATOR.$this->getCaIdticket();

    }


    


	

	
}