<?php

/**
 * ControlEncuesta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class ControlEncuesta extends BaseControlEncuesta {

    public function getEncuesta($id_encuesta) {
        $q = Doctrine_Query::create()
                ->from('controlEncuesta')
                ->where('ca_id = ?', $id_encuesta)
                ->limit(1);
        return $q->fetchOne();
    }

    /**
     *
     * @param Doctrine_Query $q
     * @return <type> 
     */
    public static function contarEncuestasEnviadas($id_formulario) {
        $q = Doctrine_Query::create()
                ->from('Emails')
                ->where('ca_idcaso = ?', $id_formulario)
                ->andWhere('ca_tipo = ?', 'Encuesta')
                ->andWhere('ca_usuenvio = ?', 'Administrador')
                ->andWhere('ca_address != ?', 'gmartinez@coltrans.com.co');
        return $q->count();
    }

    /**
     *
     * @param Doctrine_Query $q
     * @return <type> 
     */
    public static function contarEncuestas($id_formulario) {
        $q = Doctrine_Query::create()
                ->from('controlEncuesta')
                ->where('ca_idformulario = ?', $id_formulario)
                ->andWhere('ca_tipo_contestador = ?', 1);
        return $q->count();
    }

    /**
     *
     * @param Doctrine_Query $q
     * @return <type> 
     */
    public static function contarEncuestasXSucursal($id_formulario, $id_sucursal) {
        $q = Doctrine_Query::create()
                ->from('controlEncuesta')
                ->where('ca_idformulario = ?', $id_formulario)
                ->andWhere('ca_tipo_contestador = ?', 1)
                ->andWhere('ca_tipo_contestador = ?', $id_sucursal);
        return $q->count();
    }

    /**
     *
     * @param Doctrine_Query $q
     * @return <type>
     */
    public static function contarServicio(Doctrine_Query $q = null) {
        $q = Doctrine_Query::create()
                ->from('controlEncuesta')
                ->where('ca_idfornulario = ?', 1)
                ->andWhere('ca_tipo_contestador = ?', 1)
                ->andWhere('ca_tipo_contestador = ?', 1);
        return $q->count();
    }
    
    
     /**
     * Calcula la calificación promedio de una encuesta dado el id de la respuesta
     * @return type
     */
    public function getPromedio() {
        $con = Doctrine_Manager::getInstance()->connection();
        $sql = "
            select count(cast(re.ca_resultado as int)),sum(cast(re.ca_resultado as int)), avg (cast(re.ca_resultado as int))
            from ids.tb_ids i
            inner join tb_clientes cl on cl.ca_idcliente=i.ca_id
            inner join tb_concliente con on con.ca_idcliente=cl.ca_idcliente
            right join encuestas.tb_control_encuesta cf on con.ca_idcontacto=cf.ca_id_contestador            
            left join control.tb_usuarios cu on cl.ca_vendedor=cu.ca_login
            left join control.tb_sucursales csuc on cu.ca_idsucursal=csuc.ca_idsucursal
            inner join encuestas.tb_resultado_encuesta re on cf.ca_id=re.ca_idcontrolencuesta
            inner join encuestas.tb_pregunta p on re.ca_idpregunta = p.ca_id
            inner join control.tb_config_values cfv on cfv.ca_idconfig=211 and re.ca_servicio=cfv.ca_ident";
        $sql = $sql.="
            where (cf.ca_id = " . $this->getCaId() . ") and (cf.ca_tipo_contestador=1)  and (re.ca_resultado = '0' or re.ca_resultado = '1' or re.ca_resultado = '2' or re.ca_resultado = '3' or re.ca_resultado = '4' or re.ca_resultado = '5')               
        ";
        $sql = $sql.=";";

        /* $sql4 = $sql4.="
          order by csuc.ca_nombre, cf.ca_id
          "; */
        $temp = $con->execute($sql);

        return $temp->fetchAll();
    }
    
    
    /*
      case 1:
      return "Importaciones aéreo";
      break;
      case 2:
      return "Importaciones marítimo";
      break;
      case 3:
      return "Exportaciones aéreo";
      break;
      case 4:
      return "Exportaciones marítimo";
     */
}
