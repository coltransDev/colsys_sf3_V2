<?php

/**
 * Archivos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Archivos extends BaseArchivos
{
    private $attachments=array();
    const baseDirectory='/srv/www/digitalFile/';

    public function guardar(Doctrine_Connection $con = null) {
        //error_reporting(E_ALL);
        try
        {
            foreach ($this->attachments as $file) {
                $tipDoc = $this->getTipoDocumental();
                if(!$tipDoc)
                    $this->forward404Unless($tipDoc);

                $folder = $tipDoc->getCaDirectorio();
                if(!$folder)
                    $this->forward404Unless($folder);

                $path="";
                if($this->getCaRef1() )
                    $path.=$this->getCaRef1().DIRECTORY_SEPARATOR;
                if($this->getCaRef2())
                    $path.=$this->getCaRef2().DIRECTORY_SEPARATOR;
                if($this->getCaRef3())
                    $path.=$this->getCaRef3().DIRECTORY_SEPARATOR;
                
                $mime = $this->attachments['type'];
                $size = $this->attachments['size'];
                
                //echo sfConfig::get("app_digitalFile_root");
                $directory = self::baseDirectory.DIRECTORY_SEPARATOR.date("Y").DIRECTORY_SEPARATOR.$folder.$path;
                //echo $directory;
                if(!is_dir($directory)){
                    mkdir($directory, 0777, true);
                }
                chmod ( $directory , 0777 );

                $fileName=$this->getCaNombre();                
                if(move_uploaded_file($this->attachments['tmp_name'],$directory.$fileName )){
                    $this->setCaMime($mime);
                    $this->setCaSize($size);
                    $this->setCaPath($directory.DIRECTORY_SEPARATOR.$this->getCaNombre());
                    $this->stopBlaming();
                    parent::save();
                    return true;
                }
                else
                {
                    return false;
                }
            }
        }
        catch (Exception $e)
        {
                   print_r($e->getMessage());
        }
         
         
        //parent::save($con);
        
    }
    
    public function setAttachment(array $attachments = array()){
        $this->attachments=array_merge($this->attachments, $attachments);
    }
    
    
}
