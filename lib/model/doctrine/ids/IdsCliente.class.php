<?php

/**
 * IdsCliente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class IdsCliente extends BaseIdsCliente {
    /*
     * Retorna el nombre del Tipo de Persona
     * @author Carlos G. López M.
     */

    public function getTipoPersona() {
        $value = null;
        $tiposPersona = ParametroTable::retrieveByCaso("CU227", null, null, $this->getCaTipopersona());
        foreach ($tiposPersona as $tipoPersona) {
            $value = $tipoPersona->getCaValor();
        }
        return $value;
    }

    /*
     * Retorna el nombre del Régimen al que pertenece el cliente
     * @author Carlos G. López M.
     */

    public function getRegimen() {
        $value = null;
        $regimenes = ParametroTable::retrieveByCaso("CU259", null, null, $this->getCaRegimen());
        foreach ($regimenes as $regimen) {
            $value = $regimen->getCaValor();
        }
        return $value;
    }

    public function getDireccion() {

        $direccion = str_replace("|", " ", $this->getCaDireccion());

        if ($this->getCaOficina()) {
            $direccion .= "Oficina " . $this->getCaOficina() . " ";
        }
        if ($this->getCaTorre()) {
            $direccion .= "Torre " . $this->getCaTorre() . " ";
        }
        if ($this->getCaBloque()) {
            $direccion .= "Bloque " . $this->getCaBloque() . " ";
        }
        if ($this->getCaInterior()) {
            $direccion .= "Interior " . $this->getCaInterior() . " ";
        }
        $direccion .= $this->getCaComplemento() . " ";

        return $direccion;
    }

    public function getEstadoCliente() {
        $con = Doctrine_Manager::getInstance()->connection();
        $sql = "select fun_estado_clientes(" . $this->getCaIdcliente() . ")";
        $st = $con->execute($sql);
        $estado = str_replace('"', '', $st->fetchColumn());

        return explode(",", substr($estado, 1, strlen($estado)-1));
}

    public function getEstadoCircular() {
        $estado = null;
        if ($this->getCaTipo() != null) {
            $estado = 'Vigente';
        } else {
            if ($this->getCaFchcircular() == null) {
                $estado = 'Sin';
            } else {
                list($year, $month, $day) = sscanf($this->getCaFchcircular(), "%d-%d-%d");
                $vencimiento = date('Y-m-d h:i:s', mktime(0, 0, 0, $month, $day, $year+1));
                if ($vencimiento < date('Y-m-d')) {
                    $estado = 'Vencido';
                } else {
                    $estado = 'Vigente';
                }
            }
        }
        return $estado;
    }

    public function getEstadoCartaGarantia() {
        $estado = array();
        $cartasGarantia = Doctrine::getTable("ComCliente")->findBy("ca_idcliente", $this->getCaIdcliente());
        foreach ($cartasGarantia as $cartaGarantia) {
            $estado['firmado'] = $cartaGarantia->getCaFchfirmado();
            $estado['vencimiento'] = $vencimiento = $cartaGarantia->getCaFchvencimiento();
            if ($vencimiento < date('Y-m-d')) {
                $estado['estado'] = 'Vencido';
            } else {
                $estado['estado'] = 'Vigente';
            }
        }
        return $estado;
    }

    public function getFechaEncuesta($fecha = 'NULL') {
        $con = Doctrine_Manager::getInstance()->connection();
        $sql = "select fun_enccliente(" . $this->getCaIdcliente() . ", $fecha::date) AS ca_fchvisita";
        $st = $con->execute($sql);
        $encuesta = $st->fetch();
        return $encuesta["ca_fchvisita"];
    }
}
