<?php

/**
 * BaseRepAntecedentes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ca_idantecedente
 * @property integer $ca_idreporte
 * @property string $ca_estado
 * @property string $ca_login
 * @property timestamp $ca_fchcreado
 * @property string $ca_usucreado
 * @property timestamp $ca_fchactualizado
 * @property string $ca_usuactualizado
 * @property timestamp $ca_fchaceptado
 * @property string $ca_usuaceptado
 * @property string $ca_responder
 * @property string $ca_propiedades
 * @property Reporte $Reporte
 * @property Doctrine_Collection $RepAntUsuario
 * 
 * @method integer             getCaIdantecedente()   Returns the current record's "ca_idantecedente" value
 * @method integer             getCaIdreporte()       Returns the current record's "ca_idreporte" value
 * @method string              getCaEstado()          Returns the current record's "ca_estado" value
 * @method string              getCaLogin()           Returns the current record's "ca_login" value
 * @method timestamp           getCaFchcreado()       Returns the current record's "ca_fchcreado" value
 * @method string              getCaUsucreado()       Returns the current record's "ca_usucreado" value
 * @method timestamp           getCaFchactualizado()  Returns the current record's "ca_fchactualizado" value
 * @method string              getCaUsuactualizado()  Returns the current record's "ca_usuactualizado" value
 * @method timestamp           getCaFchaceptado()     Returns the current record's "ca_fchaceptado" value
 * @method string              getCaUsuaceptado()     Returns the current record's "ca_usuaceptado" value
 * @method string              getCaResponder()       Returns the current record's "ca_responder" value
 * @method string              getCaPropiedades()     Returns the current record's "ca_propiedades" value
 * @method Reporte             getReporte()           Returns the current record's "Reporte" value
 * @method Doctrine_Collection getRepAntUsuario()     Returns the current record's "RepAntUsuario" collection
 * @method RepAntecedentes     setCaIdantecedente()   Sets the current record's "ca_idantecedente" value
 * @method RepAntecedentes     setCaIdreporte()       Sets the current record's "ca_idreporte" value
 * @method RepAntecedentes     setCaEstado()          Sets the current record's "ca_estado" value
 * @method RepAntecedentes     setCaLogin()           Sets the current record's "ca_login" value
 * @method RepAntecedentes     setCaFchcreado()       Sets the current record's "ca_fchcreado" value
 * @method RepAntecedentes     setCaUsucreado()       Sets the current record's "ca_usucreado" value
 * @method RepAntecedentes     setCaFchactualizado()  Sets the current record's "ca_fchactualizado" value
 * @method RepAntecedentes     setCaUsuactualizado()  Sets the current record's "ca_usuactualizado" value
 * @method RepAntecedentes     setCaFchaceptado()     Sets the current record's "ca_fchaceptado" value
 * @method RepAntecedentes     setCaUsuaceptado()     Sets the current record's "ca_usuaceptado" value
 * @method RepAntecedentes     setCaResponder()       Sets the current record's "ca_responder" value
 * @method RepAntecedentes     setCaPropiedades()     Sets the current record's "ca_propiedades" value
 * @method RepAntecedentes     setReporte()           Sets the current record's "Reporte" value
 * @method RepAntecedentes     setRepAntUsuario()     Sets the current record's "RepAntUsuario" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRepAntecedentes extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_repantecedentes');
        $this->hasColumn('ca_idantecedente', 'integer', null, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             ));
        $this->hasColumn('ca_idreporte', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_estado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_login', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchcreado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usucreado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchactualizado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usuactualizado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchaceptado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usuaceptado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_responder', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_propiedades', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchrechazo', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usurechazo', 'string', null, array(
             'type' => 'string',
             ));
        
        $this->hasColumn('ca_motrechazo', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('symfony', array(
             'form' => true,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Reporte', array(
             'local' => 'ca_idreporte',
             'foreign' => 'ca_idreporte'));

        $this->hasMany('RepAntUsuario', array(
             'local' => 'ca_idantecedente',
             'foreign' => 'ca_idantecedente'));
    }
}