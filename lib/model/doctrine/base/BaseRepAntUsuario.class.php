<?php

/**
 * BaseRepAntUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ca_idantecedente
 * @property string $ca_login
 * @property timestamp $ca_fchrevisado
 * @property string $ca_usurevisado
 * @property timestamp $ca_fchcreado
 * @property string $ca_usucreado
 * @property timestamp $ca_fchactualizado
 * @property string $ca_usuactualizado
 * @property RepAntecedentes $RepAntecedentes
 * @property Usuario $Usuario
 * 
 * @method integer         getCaIdantecedente()   Returns the current record's "ca_idantecedente" value
 * @method string          getCaLogin()           Returns the current record's "ca_login" value
 * @method timestamp       getCaFchrevisado()     Returns the current record's "ca_fchrevisado" value
 * @method string          getCaUsurevisado()     Returns the current record's "ca_usurevisado" value
 * @method timestamp       getCaFchcreado()       Returns the current record's "ca_fchcreado" value
 * @method string          getCaUsucreado()       Returns the current record's "ca_usucreado" value
 * @method timestamp       getCaFchactualizado()  Returns the current record's "ca_fchactualizado" value
 * @method string          getCaUsuactualizado()  Returns the current record's "ca_usuactualizado" value
 * @method RepAntecedentes getRepAntecedentes()   Returns the current record's "RepAntecedentes" value
 * @method Usuario         getUsuario()           Returns the current record's "Usuario" value
 * @method RepAntUsuario   setCaIdantecedente()   Sets the current record's "ca_idantecedente" value
 * @method RepAntUsuario   setCaLogin()           Sets the current record's "ca_login" value
 * @method RepAntUsuario   setCaFchrevisado()     Sets the current record's "ca_fchrevisado" value
 * @method RepAntUsuario   setCaUsurevisado()     Sets the current record's "ca_usurevisado" value
 * @method RepAntUsuario   setCaFchcreado()       Sets the current record's "ca_fchcreado" value
 * @method RepAntUsuario   setCaUsucreado()       Sets the current record's "ca_usucreado" value
 * @method RepAntUsuario   setCaFchactualizado()  Sets the current record's "ca_fchactualizado" value
 * @method RepAntUsuario   setCaUsuactualizado()  Sets the current record's "ca_usuactualizado" value
 * @method RepAntUsuario   setRepAntecedentes()   Sets the current record's "RepAntecedentes" value
 * @method RepAntUsuario   setUsuario()           Sets the current record's "Usuario" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRepAntUsuario extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_repantusuario');
        $this->hasColumn('ca_idantecedente', 'integer', null, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             ));
        $this->hasColumn('ca_login', 'string', null, array(
             'type' => 'string',
             'autoincrement' => true,
             'primary' => true,
             ));
        $this->hasColumn('ca_fchrevisado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usurevisado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchcreado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usucreado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchactualizado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usuactualizado', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('symfony', array(
             'form' => true,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('RepAntecedentes', array(
             'local' => 'ca_idantecedente',
             'foreign' => 'ca_idantecedente'));

        $this->hasOne('Usuario', array(
             'local' => 'ca_login',
             'foreign' => 'ca_login'));
    }
}