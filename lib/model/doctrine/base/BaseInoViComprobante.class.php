<?php

/**
 * BaseInoViComprobante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ca_idmaster
 * @property string $ca_referencia
 * @property string $ca_idhouse
 * @property float $ca_valor
 * @property integer $ca_idtipo
 * @property string $ca_consecutivo
 * @property integer $ca_idcomprobante
 * @property InoMaster $InoMaster
 * @property InoHouse $InoHouse
 * @property Doctrine_Collection $InoDetalle
 * 
 * @method integer             getCaIdmaster()       Returns the current record's "ca_idmaster" value
 * @method string              getCaReferencia()     Returns the current record's "ca_referencia" value
 * @method string              getCaIdhouse()        Returns the current record's "ca_idhouse" value
 * @method float               getCaValor()          Returns the current record's "ca_valor" value
 * @method integer             getCaIdtipo()         Returns the current record's "ca_idtipo" value
 * @method string              getCaConsecutivo()    Returns the current record's "ca_consecutivo" value
 * @method integer             getCaIdcomprobante()  Returns the current record's "ca_idcomprobante" value
 * @method InoMaster           getInoMaster()        Returns the current record's "InoMaster" value
 * @method InoHouse            getInoHouse()         Returns the current record's "InoHouse" value
 * @method Doctrine_Collection getInoDetalle()       Returns the current record's "InoDetalle" collection
 * @method InoViComprobante    setCaIdmaster()       Sets the current record's "ca_idmaster" value
 * @method InoViComprobante    setCaReferencia()     Sets the current record's "ca_referencia" value
 * @method InoViComprobante    setCaIdhouse()        Sets the current record's "ca_idhouse" value
 * @method InoViComprobante    setCaValor()          Sets the current record's "ca_valor" value
 * @method InoViComprobante    setCaIdtipo()         Sets the current record's "ca_idtipo" value
 * @method InoViComprobante    setCaConsecutivo()    Sets the current record's "ca_consecutivo" value
 * @method InoViComprobante    setCaIdcomprobante()  Sets the current record's "ca_idcomprobante" value
 * @method InoViComprobante    setInoMaster()        Sets the current record's "InoMaster" value
 * @method InoViComprobante    setInoHouse()         Sets the current record's "InoHouse" value
 * @method InoViComprobante    setInoDetalle()       Sets the current record's "InoDetalle" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseInoViComprobante extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ino.vi_comprobantes');
        $this->hasColumn('ca_idmaster', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('ca_referencia', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_idhouse', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_valor', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('ca_idtipo', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('ca_consecutivo', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_idcomprobante', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('InoMaster', array(
             'local' => 'ca_idmaster',
             'foreign' => 'ca_idmaster'));

        $this->hasOne('InoHouse', array(
             'local' => 'ca_idhouse',
             'foreign' => 'ca_idhouse'));

        $this->hasMany('InoDetalle', array(
             'local' => 'ca_idcomprobante',
             'foreign' => 'ca_idcomprobante'));
    }
}