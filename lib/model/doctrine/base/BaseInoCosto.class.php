<?php

/**
 * BaseInoCosto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ca_idinocosto
 * @property integer $ca_idmaster
 * @property integer $ca_idcosto
 * @property string $ca_factura
 * @property date $ca_fchfactura
 * @property integer $ca_idproveedor
 * @property string $ca_idmoneda
 * @property decimal $ca_tcambio
 * @property decimal $ca_tcambio_usd
 * @property decimal $ca_neto
 * @property decimal $ca_venta
 * @property timestamp $ca_fchcreado
 * @property string $ca_usucreado
 * @property timestamp $ca_fchactualizado
 * @property string $ca_usuactualizado
 * @property integer $ca_idcomprobante
 * @property string $ca_datos
 * @property integer $ca_idhouse
 * @property timestamp $ca_fchanulado
 * @property string $ca_usuanulado
 * @property Ids $Ids
 * @property InoMaster $InoMaster
 * @property Usuario $UsuCreado
 * @property Usuario $UsuActualizado
 * @property Doctrine_Collection $InoComprobante
 * @property Doctrine_Collection $InoHouse
 * @property InoMaestraConceptos $InoMaestraConceptos
 * @property Doctrine_Collection $InoUtilidad
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseInoCosto extends MyDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ino.tb_costos');
        $this->hasColumn('ca_idinocosto', 'integer', null, array(
             'type' => 'integer',
             'autoincrement' => false,
             'primary' => true,
             ));
        $this->hasColumn('ca_idmaster', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_idcosto', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_factura', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchfactura', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('ca_idproveedor', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_idmoneda', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_tcambio', 'decimal', null, array(
             'type' => 'decimal',
             ));
        $this->hasColumn('ca_tcambio_usd', 'decimal', null, array(
             'type' => 'decimal',
             ));
        $this->hasColumn('ca_neto', 'decimal', null, array(
             'type' => 'decimal',
             ));
        $this->hasColumn('ca_venta', 'decimal', null, array(
             'type' => 'decimal',
             ));
        $this->hasColumn('ca_fchcreado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usucreado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchactualizado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usuactualizado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_idcomprobante', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_datos', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_idhouse', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_fchanulado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usuanulado', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Ids', array(
             'local' => 'ca_idproveedor',
             'foreign' => 'ca_id'));

        $this->hasOne('InoMaster', array(
             'local' => 'ca_idmaster',
             'foreign' => 'ca_idmaster'));

        $this->hasOne('Usuario as UsuCreado', array(
             'local' => 'ca_usucreado',
             'foreign' => 'ca_login'));

        $this->hasOne('Usuario as UsuActualizado', array(
             'local' => 'ca_usuactualizado',
             'foreign' => 'ca_login'));

        $this->hasMany('InoComprobante', array(
             'local' => 'ca_idcomprobante',
             'foreign' => 'ca_idcomprobante'));

        $this->hasMany('InoHouse', array(
             'local' => 'ca_idhouse',
             'foreign' => 'ca_idhouse'));

        $this->hasOne('InoMaestraConceptos', array(
             'local' => 'ca_idcosto',
             'foreign' => 'ca_idconcepto'));

        $this->hasMany('InoUtilidad', array(
             'local' => 'ca_idinocosto',
             'foreign' => 'ca_idinocosto'));
    }
}