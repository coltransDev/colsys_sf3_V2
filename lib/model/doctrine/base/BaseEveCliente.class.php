<?php

/**
 * BaseEveCliente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ca_idevento
 * @property integer $ca_idcliente
 * @property timestamp $ca_fchevento
 * @property string $ca_tipo
 * @property string $ca_asunto
 * @property string $ca_detalle
 * @property string $ca_compromisos
 * @property timestamp $ca_fchcompromiso
 * @property integer $ca_idantecedente
 * @property string $ca_usuario
 * @property Ids $Ids
 * @property Usuario $Usuario
 * 
 * @method integer    getCaIdevento()       Returns the current record's "ca_idevento" value
 * @method integer    getCaIdcliente()      Returns the current record's "ca_idcliente" value
 * @method timestamp  getCaFchevento()      Returns the current record's "ca_fchevento" value
 * @method string     getCaTipo()           Returns the current record's "ca_tipo" value
 * @method string     getCaAsunto()         Returns the current record's "ca_asunto" value
 * @method string     getCaDetalle()        Returns the current record's "ca_detalle" value
 * @method string     getCaCompromisos()    Returns the current record's "ca_compromisos" value
 * @method timestamp  getCaFchcompromiso()  Returns the current record's "ca_fchcompromiso" value
 * @method integer    getCaIdantecedente()  Returns the current record's "ca_idantecedente" value
 * @method string     getCaUsuario()        Returns the current record's "ca_usuario" value
 * @method Ids        getIds()              Returns the current record's "Ids" value
 * @method Usuario    getUsuario()          Returns the current record's "Usuario" value
 * @method EveCliente setCaIdevento()       Sets the current record's "ca_idevento" value
 * @method EveCliente setCaIdcliente()      Sets the current record's "ca_idcliente" value
 * @method EveCliente setCaFchevento()      Sets the current record's "ca_fchevento" value
 * @method EveCliente setCaTipo()           Sets the current record's "ca_tipo" value
 * @method EveCliente setCaAsunto()         Sets the current record's "ca_asunto" value
 * @method EveCliente setCaDetalle()        Sets the current record's "ca_detalle" value
 * @method EveCliente setCaCompromisos()    Sets the current record's "ca_compromisos" value
 * @method EveCliente setCaFchcompromiso()  Sets the current record's "ca_fchcompromiso" value
 * @method EveCliente setCaIdantecedente()  Sets the current record's "ca_idantecedente" value
 * @method EveCliente setCaUsuario()        Sets the current record's "ca_usuario" value
 * @method EveCliente setIds()              Sets the current record's "Ids" value
 * @method EveCliente setUsuario()          Sets the current record's "Usuario" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseEveCliente extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_evecliente');
        $this->hasColumn('ca_idevento', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('ca_idcliente', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_fchevento', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_tipo', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_asunto', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_detalle', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_compromisos', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchcompromiso', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_idantecedente', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_usuario', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Ids', array(
             'local' => 'ca_id',
             'foreign' => 'ca_id'));

        $this->hasOne('Usuario', array(
             'local' => 'ca_usuario',
             'foreign' => 'ca_login'));
    }
}