<?php

/**
 * BaseRepProveedor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ca_idrepproveedor
 * @property integer $ca_idreporte
 * @property integer $ca_idproveedor
 * @property string $ca_incoterms
 * @property string $ca_orden_prov
 * @property date $ca_carga_disponible
 * @property string $ca_usucreado
 * @property timestamp $ca_fchcreado
 * @property string $ca_usuactualizado
 * @property timestamp $ca_fchactualizado
 * @property Doctrine_Collection $Reporte
 * @property Tercero $Tercero
 * 
 * @method integer             getCaIdrepproveedor()    Returns the current record's "ca_idrepproveedor" value
 * @method integer             getCaIdreporte()         Returns the current record's "ca_idreporte" value
 * @method integer             getCaIdproveedor()       Returns the current record's "ca_idproveedor" value
 * @method string              getCaIncoterms()         Returns the current record's "ca_incoterms" value
 * @method string              getCaOrdenProv()         Returns the current record's "ca_orden_prov" value
 * @method date                getCaCargaDisponible()   Returns the current record's "ca_carga_disponible" value
 * @method string              getCaUsucreado()         Returns the current record's "ca_usucreado" value
 * @method timestamp           getCaFchcreado()         Returns the current record's "ca_fchcreado" value
 * @method string              getCaUsuactualizado()    Returns the current record's "ca_usuactualizado" value
 * @method timestamp           getCaFchactualizado()    Returns the current record's "ca_fchactualizado" value
 * @method Doctrine_Collection getReporte()             Returns the current record's "Reporte" collection
 * @method Tercero             getTercero()             Returns the current record's "Tercero" value
 * @method RepProveedor        setCaIdrepproveedor()    Sets the current record's "ca_idrepproveedor" value
 * @method RepProveedor        setCaIdreporte()         Sets the current record's "ca_idreporte" value
 * @method RepProveedor        setCaIdproveedor()       Sets the current record's "ca_idproveedor" value
 * @method RepProveedor        setCaIncoterms()         Sets the current record's "ca_incoterms" value
 * @method RepProveedor        setCaOrdenProv()         Sets the current record's "ca_orden_prov" value
 * @method RepProveedor        setCaCargaDisponible()   Sets the current record's "ca_carga_disponible" value
 * @method RepProveedor        setCaUsucreado()         Sets the current record's "ca_usucreado" value
 * @method RepProveedor        setCaFchcreado()         Sets the current record's "ca_fchcreado" value
 * @method RepProveedor        setCaUsuactualizado()    Sets the current record's "ca_usuactualizado" value
 * @method RepProveedor        setCaFchactualizado()    Sets the current record's "ca_fchactualizado" value
 * @method RepProveedor        setReporte()             Sets the current record's "Reporte" collection
 * @method RepProveedor        setTercero()             Sets the current record's "Tercero" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRepProveedor extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_repproveedores');
        $this->hasColumn('ca_idrepproveedor', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('ca_idreporte', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_idproveedor', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_incoterms', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_orden_prov', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_carga_disponible', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('ca_usucreado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchcreado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usuactualizado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchactualizado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Reporte', array(
             'local' => 'ca_idreporte',
             'foreign' => 'ca_idreporte'));

        $this->hasOne('Tercero', array(
             'local' => 'ca_idproveedor',
             'foreign' => 'ca_idtercero'));
    }
}