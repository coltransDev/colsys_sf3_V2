<?php

/**
 * BaseFileColumn
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ca_idfileheader
 * @property string $ca_idcolumna
 * @property string $ca_columna
 * @property string $ca_label
 * @property string $ca_mascara
 * @property string $ca_tipo
 * @property integer $ca_longitud
 * @property integer $ca_precision
 * @property integer $ca_idregistro
 * @property timestamp $ca_fchcreado
 * @property string $ca_usucreado
 * @property timestamp $ca_fchactualizado
 * @property string $ca_usuactualizado
 * @property FileHeader $FileHeader
 * @property FileColumn $Registro
 * @property Doctrine_Collection $FileColumn
 * 
 * @method integer             getCaIdfileheader()    Returns the current record's "ca_idfileheader" value
 * @method string              getCaIdcolumna()       Returns the current record's "ca_idcolumna" value
 * @method string              getCaColumna()         Returns the current record's "ca_columna" value
 * @method string              getCaLabel()           Returns the current record's "ca_label" value
 * @method string              getCaMascara()         Returns the current record's "ca_mascara" value
 * @method string              getCaTipo()            Returns the current record's "ca_tipo" value
 * @method integer             getCaLongitud()        Returns the current record's "ca_longitud" value
 * @method integer             getCaPrecision()       Returns the current record's "ca_precision" value
 * @method integer             getCaIdregistro()      Returns the current record's "ca_idregistro" value
 * @method timestamp           getCaFchcreado()       Returns the current record's "ca_fchcreado" value
 * @method string              getCaUsucreado()       Returns the current record's "ca_usucreado" value
 * @method timestamp           getCaFchactualizado()  Returns the current record's "ca_fchactualizado" value
 * @method string              getCaUsuactualizado()  Returns the current record's "ca_usuactualizado" value
 * @method FileHeader          getFileHeader()        Returns the current record's "FileHeader" value
 * @method FileColumn          getRegistro()          Returns the current record's "Registro" value
 * @method Doctrine_Collection getFileColumn()        Returns the current record's "FileColumn" collection
 * @method FileColumn          setCaIdfileheader()    Sets the current record's "ca_idfileheader" value
 * @method FileColumn          setCaIdcolumna()       Sets the current record's "ca_idcolumna" value
 * @method FileColumn          setCaColumna()         Sets the current record's "ca_columna" value
 * @method FileColumn          setCaLabel()           Sets the current record's "ca_label" value
 * @method FileColumn          setCaMascara()         Sets the current record's "ca_mascara" value
 * @method FileColumn          setCaTipo()            Sets the current record's "ca_tipo" value
 * @method FileColumn          setCaLongitud()        Sets the current record's "ca_longitud" value
 * @method FileColumn          setCaPrecision()       Sets the current record's "ca_precision" value
 * @method FileColumn          setCaIdregistro()      Sets the current record's "ca_idregistro" value
 * @method FileColumn          setCaFchcreado()       Sets the current record's "ca_fchcreado" value
 * @method FileColumn          setCaUsucreado()       Sets the current record's "ca_usucreado" value
 * @method FileColumn          setCaFchactualizado()  Sets the current record's "ca_fchactualizado" value
 * @method FileColumn          setCaUsuactualizado()  Sets the current record's "ca_usuactualizado" value
 * @method FileColumn          setFileHeader()        Sets the current record's "FileHeader" value
 * @method FileColumn          setRegistro()          Sets the current record's "Registro" value
 * @method FileColumn          setFileColumn()        Sets the current record's "FileColumn" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseFileColumn extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_filecolumns');
        $this->hasColumn('ca_idfileheader', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('ca_idcolumna', 'string', null, array(
             'type' => 'string',
             'primary' => true,
             ));
        $this->hasColumn('ca_columna', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_label', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_mascara', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_tipo', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_longitud', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_precision', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_idregistro', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_fchcreado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usucreado', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_fchactualizado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_usuactualizado', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('FileHeader', array(
             'local' => 'ca_idfileheader',
             'foreign' => 'ca_idfileheader'));

        $this->hasOne('FileColumn as Registro', array(
             'local' => 'ca_idcolumna',
             'foreign' => 'ca_idregistro'));

        $this->hasMany('FileColumn', array(
             'local' => 'ca_idregistro',
             'foreign' => 'ca_idcolumna'));
    }
}