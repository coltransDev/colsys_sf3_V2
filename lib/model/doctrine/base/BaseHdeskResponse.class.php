<?php

/**
 * BaseHdeskResponse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ca_idresponse
 * @property integer $ca_idticket
 * @property integer $ca_responseto
 * @property string $ca_text
 * @property string $ca_login
 * @property timestamp $ca_createdat
 * @property integer $ca_idissue
 * @property integer $ca_idtarea
 * @property integer $ca_idstatus
 * @property Usuario $Usuario
 * @property KBIssue $KBIssue
 * @property Doctrine_Collection $Response
 * @property NotTarea $NotTarea
 * @property HdeskTicket $HdeskTicket
 * @property HdeskResponse $HdeskResponse
 * @property Doctrine_Collection $HdeskEstimations
 * 
 * @method integer             getCaIdresponse()     Returns the current record's "ca_idresponse" value
 * @method integer             getCaIdticket()       Returns the current record's "ca_idticket" value
 * @method integer             getCaResponseto()     Returns the current record's "ca_responseto" value
 * @method string              getCaText()           Returns the current record's "ca_text" value
 * @method string              getCaLogin()          Returns the current record's "ca_login" value
 * @method timestamp           getCaCreatedat()      Returns the current record's "ca_createdat" value
 * @method integer             getCaIdissue()        Returns the current record's "ca_idissue" value
 * @method integer             getCaIdtarea()        Returns the current record's "ca_idtarea" value
 * @method integer             getCaIdstatus()       Returns the current record's "ca_idstatus" value
 * @method Usuario             getUsuario()          Returns the current record's "Usuario" value
 * @method KBIssue             getKBIssue()          Returns the current record's "KBIssue" value
 * @method Doctrine_Collection getResponse()         Returns the current record's "Response" collection
 * @method NotTarea            getNotTarea()         Returns the current record's "NotTarea" value
 * @method HdeskTicket         getHdeskTicket()      Returns the current record's "HdeskTicket" value
 * @method HdeskResponse       getHdeskResponse()    Returns the current record's "HdeskResponse" value
 * @method Doctrine_Collection getHdeskEstimations() Returns the current record's "HdeskEstimations" collection
 * @method HdeskResponse       setCaIdresponse()     Sets the current record's "ca_idresponse" value
 * @method HdeskResponse       setCaIdticket()       Sets the current record's "ca_idticket" value
 * @method HdeskResponse       setCaResponseto()     Sets the current record's "ca_responseto" value
 * @method HdeskResponse       setCaText()           Sets the current record's "ca_text" value
 * @method HdeskResponse       setCaLogin()          Sets the current record's "ca_login" value
 * @method HdeskResponse       setCaCreatedat()      Sets the current record's "ca_createdat" value
 * @method HdeskResponse       setCaIdissue()        Sets the current record's "ca_idissue" value
 * @method HdeskResponse       setCaIdtarea()        Sets the current record's "ca_idtarea" value
 * @method HdeskResponse       setCaIdstatus()       Sets the current record's "ca_idstatus" value
 * @method HdeskResponse       setUsuario()          Sets the current record's "Usuario" value
 * @method HdeskResponse       setKBIssue()          Sets the current record's "KBIssue" value
 * @method HdeskResponse       setResponse()         Sets the current record's "Response" collection
 * @method HdeskResponse       setNotTarea()         Sets the current record's "NotTarea" value
 * @method HdeskResponse       setHdeskTicket()      Sets the current record's "HdeskTicket" value
 * @method HdeskResponse       setHdeskResponse()    Sets the current record's "HdeskResponse" value
 * @method HdeskResponse       setHdeskEstimations() Sets the current record's "HdeskEstimations" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseHdeskResponse extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('helpdesk.tb_responses');
        $this->hasColumn('ca_idresponse', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('ca_idticket', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_responseto', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_text', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ca_login', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('ca_createdat', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ca_idissue', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_idtarea', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ca_idstatus', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'ca_login',
             'foreign' => 'ca_login'));

        $this->hasOne('KBIssue', array(
             'local' => 'ca_idissue',
             'foreign' => 'ca_idissue'));

        $this->hasMany('HdeskResponse as Response', array(
             'local' => 'ca_idresponse',
             'foreign' => 'ca_responseto',
             'orderBy' => 'ca_createdat ASC'));

        $this->hasOne('NotTarea', array(
             'local' => 'ca_idtarea',
             'foreign' => 'ca_idtarea'));

        $this->hasOne('HdeskTicket', array(
             'local' => 'ca_idticket',
             'foreign' => 'ca_idticket'));

        $this->hasOne('HdeskResponse', array(
             'local' => 'ca_responseto',
             'foreign' => 'ca_idresponse'));

        $this->hasMany('HdeskEstimations', array(
             'local' => 'ca_idresponse',
             'foreign' => 'ca_idresponse'));
    }
}