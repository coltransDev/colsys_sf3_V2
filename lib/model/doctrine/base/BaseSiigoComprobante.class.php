<?php

/**
 * BaseSiigoComprobante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_uneg_cont
 * @property string $cd_doc_cont
 * @property integer $nu_docsop_cont
 * @property integer $nu_cont
 * @property string $tp_doc_sop_cont
 * @property date $fecha_cont
 * @property string $idtpo_idapb_cont
 * @property string $nit_apb_cont
 * @property string $dv_apb_cont
 * @property integer $id_suc_cont
 * @property numeric $total_db_cont
 * @property numeric $total_cr_cont
 * @property string $ind_incorp_cont
 * @property string $codalt_uneg_cont
 * @property string $codalt_empre_cont
 * @property integer $cd_errsiigo_cont
 * @property string $ind_anul_cont
 * @property string $archivo
 * @property string $error_archivo
 * @property Doctrine_Collection $SiigoDetComprobante
 * @property InoComprobante $InoComprobante
 * 
 * @method integer             getIdUnegCont()          Returns the current record's "id_uneg_cont" value
 * @method string              getCdDocCont()           Returns the current record's "cd_doc_cont" value
 * @method integer             getNuDocsopCont()        Returns the current record's "nu_docsop_cont" value
 * @method integer             getNuCont()              Returns the current record's "nu_cont" value
 * @method string              getTpDocSopCont()        Returns the current record's "tp_doc_sop_cont" value
 * @method date                getFechaCont()           Returns the current record's "fecha_cont" value
 * @method string              getIdtpoIdapbCont()      Returns the current record's "idtpo_idapb_cont" value
 * @method string              getNitApbCont()          Returns the current record's "nit_apb_cont" value
 * @method string              getDvApbCont()           Returns the current record's "dv_apb_cont" value
 * @method integer             getIdSucCont()           Returns the current record's "id_suc_cont" value
 * @method numeric             getTotalDbCont()         Returns the current record's "total_db_cont" value
 * @method numeric             getTotalCrCont()         Returns the current record's "total_cr_cont" value
 * @method string              getIndIncorpCont()       Returns the current record's "ind_incorp_cont" value
 * @method string              getCodaltUnegCont()      Returns the current record's "codalt_uneg_cont" value
 * @method string              getCodaltEmpreCont()     Returns the current record's "codalt_empre_cont" value
 * @method integer             getCdErrsiigoCont()      Returns the current record's "cd_errsiigo_cont" value
 * @method string              getIndAnulCont()         Returns the current record's "ind_anul_cont" value
 * @method string              getArchivo()             Returns the current record's "archivo" value
 * @method string              getErrorArchivo()        Returns the current record's "error_archivo" value
 * @method Doctrine_Collection getSiigoDetComprobante() Returns the current record's "SiigoDetComprobante" collection
 * @method InoComprobante      getInoComprobante()      Returns the current record's "InoComprobante" value
 * @method SiigoComprobante    setIdUnegCont()          Sets the current record's "id_uneg_cont" value
 * @method SiigoComprobante    setCdDocCont()           Sets the current record's "cd_doc_cont" value
 * @method SiigoComprobante    setNuDocsopCont()        Sets the current record's "nu_docsop_cont" value
 * @method SiigoComprobante    setNuCont()              Sets the current record's "nu_cont" value
 * @method SiigoComprobante    setTpDocSopCont()        Sets the current record's "tp_doc_sop_cont" value
 * @method SiigoComprobante    setFechaCont()           Sets the current record's "fecha_cont" value
 * @method SiigoComprobante    setIdtpoIdapbCont()      Sets the current record's "idtpo_idapb_cont" value
 * @method SiigoComprobante    setNitApbCont()          Sets the current record's "nit_apb_cont" value
 * @method SiigoComprobante    setDvApbCont()           Sets the current record's "dv_apb_cont" value
 * @method SiigoComprobante    setIdSucCont()           Sets the current record's "id_suc_cont" value
 * @method SiigoComprobante    setTotalDbCont()         Sets the current record's "total_db_cont" value
 * @method SiigoComprobante    setTotalCrCont()         Sets the current record's "total_cr_cont" value
 * @method SiigoComprobante    setIndIncorpCont()       Sets the current record's "ind_incorp_cont" value
 * @method SiigoComprobante    setCodaltUnegCont()      Sets the current record's "codalt_uneg_cont" value
 * @method SiigoComprobante    setCodaltEmpreCont()     Sets the current record's "codalt_empre_cont" value
 * @method SiigoComprobante    setCdErrsiigoCont()      Sets the current record's "cd_errsiigo_cont" value
 * @method SiigoComprobante    setIndAnulCont()         Sets the current record's "ind_anul_cont" value
 * @method SiigoComprobante    setArchivo()             Sets the current record's "archivo" value
 * @method SiigoComprobante    setErrorArchivo()        Sets the current record's "error_archivo" value
 * @method SiigoComprobante    setSiigoDetComprobante() Sets the current record's "SiigoDetComprobante" collection
 * @method SiigoComprobante    setInoComprobante()      Sets the current record's "InoComprobante" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseSiigoComprobante extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_docum_contable');
        $this->hasColumn('id_uneg_cont', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('cd_doc_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('nu_docsop_cont', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nu_cont', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('tp_doc_sop_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('fecha_cont', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('idtpo_idapb_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('nit_apb_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dv_apb_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('id_suc_cont', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('total_db_cont', 'numeric', null, array(
             'type' => 'numeric',
             ));
        $this->hasColumn('total_cr_cont', 'numeric', null, array(
             'type' => 'numeric',
             ));
        $this->hasColumn('ind_incorp_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('codalt_uneg_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('codalt_empre_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('cd_errsiigo_cont', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ind_anul_cont', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('archivo', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('error_archivo', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('SiigoDetComprobante', array(
             'local' => 'id_uneg_cont',
             'foreign' => 'id_uneg_movcont'));

        $this->hasOne('InoComprobante', array(
             'local' => 'id_uneg_cont',
             'foreign' => 'ca_idcomprobante'));
    }
}