<?php

/**
 * InoMaestraAdu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class InoMaestraAdu extends BaseInoMaestraAdu
{
    
    public function getRequiereIdgAduana($idetapa){
        
        if($this->getCaImpoexpo() == Constantes::EXPO){
            if($this->getCaAplicaidg())
                return true;
            else
                return false;
        }else
            return false;
    }
    
    public function generarIdg($options, $conn){        
        
        $options["fecha"] = $options["fchend"] = Utils::parseDate($options["fecha"], 'Y-m-d');        
        $options["idcaso"] = $this->getInoExpoAdu()->getReporte()->getCaConsecutivo();
        $impoexpo = $this->getCaImpoexpo();
        $transporte = $this->getCaTransporte();
        
        if($impoexpo == Constantes::EXPO){
        
            $master = new InoMaster();
            $master->setCaReferencia($this->getCaReferencia());
            
            $infoeventos = $master->getInfoEventos($impoexpo);
            
            $options["impoexpo"] = $impoexpo;
            $options["transporte"] = $transporte;
            $options["eventos"] = $infoeventos["tb_eventos"];
            $options["fchini"] = $master->getFchUltimoEvento($impoexpo);
            
            if($options["fchini"] == null)
                return array("cumplio"=>"No", "mensaje"=>"La referencia no tiene eventos creados. No es posible calcular el indicador");                                
        }

        $idgConfig = $this->getIdgAduana($options);        
        $calculo = $idgConfig->calcularIndicador($options);        
        $cumple = $idgConfig->evaluarIndicador($calculo["estado"], $calculo["val"], $options, $conn);
        
        return $cumple;
    }
    
    function getIdgAduana($options){
        
        $options["fecha"] = Utils::parseDate($options["fecha"], 'Y-m-d');                
        $options["idsucursal"] = $this->getUsucreado()->getSucursal()->getCaIdsucursal();
        $options["idempresa"] = Constantes::IDCOLMAS;
        
        return IdgTable::getNuevoIndicador($options);        
    }
    
    public function getIdsExpo(){
        
        return Doctrine::getTable("InoMaestraAdu")
            ->createQuery("ad")
            ->innerJoin("ad.Cliente c")
            ->where("ca_referencia = ?", $this->getCaReferencia())
            ->fetchOne();
        
    }
}
